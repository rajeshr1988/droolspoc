<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="1.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.codehaus.janino"
		module="janino"
		revision="2.5.16"
		status="release"
		publication="20100428011736"
	>
		<license name="New BSD License" url="http://dist.codehaus.org/janino/new_bsd_license.txt" />
		<description homepage="http://docs.codehaus.org/display/JANINO/Home">
		Janino is a compiler that reads a JavaTM expression, block, class body, source file or a set of source files, and
    generates JavaTM bytecode that is loaded and executed directly. Janino is not intended to be a development tool,
    but an embedded compiler for run-time compilation purposes, e.g. expression evaluators or &quot;server pages&quot; engines
    like JSP.
		</description>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:maven.plugins>org.apache.maven.plugins__maven-compiler-plugin__2.2|org.apache.maven.plugins__maven-surefire-plugin__2.4.3|org.codehaus.mojo__buildnumber-maven-plugin__1.0-beta-2|org.apache.maven.plugins__maven-clean-plugin__2.4|org.apache.maven.plugins__maven-resources-plugin__2.4.2|org.apache.maven.plugins__maven-install-plugin__2.3|org.apache.maven.plugins__maven-deploy-plugin__2.5|org.apache.maven.plugins__maven-site-plugin__2.0.1|org.apache.maven.plugins__maven-source-plugin__2.1.1|org.apache.maven.plugins__maven-jar-plugin__2.3</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="janino" type="jar" ext="jar" conf="master"/>
		<artifact name="janino" type="source" ext="jar" conf="sources" m:classifier="sources"/>
	</publications>
	<dependencies>
		<dependency org="junit" name="junit" rev="3.8.2" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="org.apache.ant" name="ant-nodeps" rev="1.7.1" force="true" conf="optional->compile(*),master(*)"/>
	</dependencies>
</ivy-module>
